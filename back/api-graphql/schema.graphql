### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Comment {
  author: User
  content: String
  createdAt: DateTime!
  id: String!
  post: Post
  updatedAt: DateTime!
}

type Cron {
  createdAt: DateTime!
  id: String!
  status: Int
  streamer: String
  time: String
  updatedAt: DateTime!
  user: String
}

input CronCreateInput {
  status: Int!
  streamer: String!
  time: String!
  user: String!
}

input CronUpdateInput {
  id: String!
  status: Int!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input EntityCreateInput {
  test: String!
  test2: String!
}

type Follows {
  createdAt: DateTime!
  id: String!
  total: Int
  updatedAt: DateTime!
  user: Twitch_user
}

type Mutation {
  addCron(data: CronCreateInput!): Cron
  addPost(data: PostCreateInput!): Post
  updateCron(data: CronUpdateInput!): Cron
}

type Pagination {
  count: Int
  next: Boolean
  skip: Int
  take: Int
}

type Post {
  author: User
  comment: [Comment]
  content: String
  createdAt: DateTime!
  id: String!
  published: Boolean
  title: String
  updatedAt: DateTime!
  viewCount: Int
}

input PostCreateInput {
  content: String
  title: String
}

type Profile {
  bio: String
  createdAt: DateTime!
  id: String!
  updatedAt: DateTime!
  user: User
}

type Query {
  getAllCron(filter: Int, skip: Int, take: Int): [Cron!]!
  getAllStreamer(filter: String, skip: Int, take: Int): [Streamer!]!
  getAllViewer(filter: String, skip: Int, take: Int): [Viewer!]!
  pagination(filter: String, skip: Int, take: Int): [Int]
}

type Streamer {
  community_ids: [String]
  createdAt: DateTime!
  game_id: String
  game_name: String
  id: String!
  language: String
  started_at: String
  thumbnail_url: String
  title: String
  type: String
  updatedAt: DateTime!
  user_id: String
  user_login: String
  viewer: [Viewer]
  viewer_count: Int
}

type Twitch_game {
  box_art_url: String
  createdAt: DateTime!
  game_id: String
  game_name: String
  id: String!
  updatedAt: DateTime!
}

type Twitch_user {
  createdAt: DateTime!
  created_at_user: String
  description: String
  follows: [Follows]
  id: String!
  profile_image_url: String
  type: String
  updatedAt: DateTime!
  user_id: String
  user_name: String
  view_count: Int
}

type User {
  access_token: String
  comments: [Comment]
  createdAt: DateTime!
  email: String!
  id: String!
  name: String
  password: String!
  posts: [Post]
  profile: Profile
  refresh_token: String
  updatedAt: DateTime!
}

type Viewer {
  admins: [String]
  broadcaster: [String]
  count: Int
  createdAt: DateTime!
  cron: String
  id: String!
  moderators: [String]
  name: String
  staff: [String]
  streamer: Streamer
  updatedAt: DateTime!
  viewers: [String]
  vips: [String]
}